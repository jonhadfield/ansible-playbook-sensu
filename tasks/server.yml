---
- name: install erlang (Debian/Ubuntu)
  apt: name=erlang-nox state=present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install erlang (EL)
  yum: name=erlang state=present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: install redis
  apt: name=redis-server state=present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install redis
  yum: name=redis state=present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: ensure redis is started and runs at boot (Debian/Ubuntu)
  service: name=redis-server state=started enabled=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: ensure redis is started and runs at boot (EL)
  service: name=redis state=started enabled=yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: configure sensu to use redis
  copy: src=redis.json dest=/etc/sensu/conf.d/redis.json mode=0644

- name: generate /etc/sensu/conf.d/api.json
  template:
    src=api.json.j2
    dest=/etc/sensu/conf.d/api.json
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0750
  notify:
    - restart sensu server
    - restart sensu api

- name: enable sensu-{server,api} to survive reboot
  service: name=sensu-{{ item }} enabled=yes
  with_items:
    - server
    - api

- name: generate /etc/sensu/conf.d/checks.json
  template:
    src=checks.json.j2
    dest=/etc/sensu/conf.d/checks.json
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0750
  notify:
    - restart sensu server
    - restart sensu api

- name: generate pushover.json
  template:
    src=handlers/pushover.json.j2
    dest=/etc/sensu/conf.d/pushover.json
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0750
  notify:
    - restart sensu server
    - restart sensu client

- name: generate /etc/sensu/conf.d/handlers.json
  template:
    src=handlers.json.j2
    dest=/etc/sensu/conf.d/handlers.json
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0750
  notify:
    - restart sensu server

- name: copy the handlers files
  copy:
    src=handlers/
    dest=/etc/sensu/handlers/
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0750
  notify:
    - restart sensu server

- name: copy extension files
  copy:
    src=extensions/
    dest=/etc/sensu/extensions/
    owner=sensu
    group=sensu
    mode=0750
  notify:
    - restart sensu server

- name: copy conf.d files
  copy:
    src=conf.d/
    dest=/etc/sensu/conf.d/
    owner=sensu
    group=sensu
    mode=0640
  notify:
    - restart sensu server
